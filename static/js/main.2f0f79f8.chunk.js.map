{"version":3,"sources":["store/actions/actionTypes.js","containers/Filter.js","store/actions/actions.js","components/Button.js","components/InputsPanel.js","components/Tile.js","containers/Library.js","App.js","store/reducer/reducer.js","reportWebVitals.js","index.js"],"names":["ADD_BOOK","DELETE_BOOK","FILTER_BOOKS","connect","state","filteredWord","dispatch","onFilterBooks","word","type","actionTypes","actions","props","placeholder","value","onChange","e","target","StyledButton","styled","button","color","Button","onClick","clickAction","children","StyledInputs","div","InputsPanel","useState","title","setTitle","author","setAuthor","year","setYear","checkIfDuplicated","duplicated","books","forEach","filtered","alert","addBook","clearInputs","required","length","StyledTile","Tile","releaseYear","deleteBook","StyledLibrary","StyledGrid","bookLib","onAddBook","book","onDeleteBook","library","newLibrary","filter","deleteBookHandler","map","startsWith","App","initialState","reducer","action","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f0f79f8.chunk.js","sourcesContent":["export const ADD_BOOK = 'ADD_BOOK';\r\nexport const DELETE_BOOK = 'DELETE_BOOK';\r\nexport const FILTER_BOOKS = 'FILTER_BOOKS';","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../store/actions/index\";\r\n\r\nconst Filter = (props) => {\r\n  const filterHandler = (word) => {\r\n    props.onFilterBooks(word);\r\n  };\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Filter by Title\"\r\n      value={props.filteredWord}\r\n      onChange={(e) => filterHandler(e.target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filteredWord: state.filteredWord,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFilterBooks: (word) => {\r\n      dispatch(actions.filterBooks(word));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const addBook = (title, author, releaseYear) => ({\r\n  type: actionTypes.ADD_BOOK,\r\n  book: { title, author, releaseYear },\r\n});\r\n\r\nexport const deleteBook = (title, library) => {\r\n  const newLibrary = library.filter((book) => {\r\n    return book.title !== title && book;\r\n  });\r\n\r\n  return {\r\n    type: actionTypes.DELETE_BOOK,\r\n    library: newLibrary,\r\n  };\r\n};\r\n\r\nexport const filterBooks = (word) => ({\r\n  type: actionTypes.FILTER_BOOKS,\r\n  word,\r\n});\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.button`\r\n  background-color: ${(props) => props.color};\r\n  border-radius: 5px;\r\n  padding: 0.5rem;\r\n  border: none;\r\n  margin-top: 0.5rem;\r\n  cursor: pointer;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  display: block;\r\n  width: 100%;\r\n  max-width: 40rem;\r\n`;\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <StyledButton\r\n      color={props.color}\r\n      type={props.type}\r\n      onClick={props.clickAction}\r\n    >\r\n      {props.children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\nimport Filter from \"../containers/Filter\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./Button\";\r\n\r\nconst StyledInputs = styled.div`\r\n  display: flex;\r\n  height: 27vh;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-top: 0.5rem;\r\n  form {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    input {\r\n      flex-grow: 1;\r\n      padding: 0.5rem;\r\n      border: 2px solid black;\r\n      border-radius: 5px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 320px) {\r\n    height: 35vh;\r\n  }\r\n`;\r\n\r\nconst InputsPanel = (props) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [year, setYear] = useState(\"\");\r\n\r\n  const addBookHandler = () => {\r\n    if (title.length > 0 && author.length > 0 && year) {\r\n      checkIfDuplicated(title);\r\n      clearInputs();\r\n    } else {\r\n      alert(\"Fill all inputs\");\r\n    }\r\n  };\r\n  const checkIfDuplicated = (title) => {\r\n    let duplicated = false;\r\n    props.books.forEach((filtered) => {\r\n      if (filtered.title === title) {\r\n        alert(\"You have this book already\");\r\n        duplicated = true;\r\n      }\r\n    });\r\n    !duplicated && props.addBook(title, author, year);\r\n  };\r\n  const clearInputs = () => {\r\n    setTitle(\"\");\r\n    setAuthor(\"\");\r\n    setYear(\"\");\r\n  };\r\n  return (\r\n    <StyledInputs>\r\n      <form>\r\n        <input\r\n          required\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          value={title}\r\n        />\r\n        <input\r\n          required\r\n          type=\"text\"\r\n          placeholder=\"Author\"\r\n          onChange={(e) => setAuthor(e.target.value)}\r\n          value={author}\r\n        />\r\n        <input\r\n          required\r\n          type=\"number\"\r\n          placeholder=\"Year of Release\"\r\n          onChange={(e) => setYear(e.target.value)}\r\n          value={year}\r\n        />\r\n        <Filter />\r\n      </form>\r\n      <Button type=\"submit\" color=\"#23272b\" clickAction={addBookHandler}>\r\n        add\r\n      </Button>\r\n    </StyledInputs>\r\n  );\r\n};\r\n\r\nexport default InputsPanel;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./Button\";\r\n\r\nconst StyledTile = styled.div`\r\n  padding: 2rem 1rem;\r\n  border: 2px solid #000;\r\n  border-radius: 0.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  max-width:45rem;\r\n  max-height:300px;\r\n  h1, h2, h3{\r\n    padding-bottom:1rem;\r\n  }\r\n  @media screen and (min-width:768px){\r\n    max-width:35rem;\r\n  }\r\n`;\r\n\r\nconst Tile = (props) => {\r\n  return (\r\n    <StyledTile>\r\n      <h1>Title: {props.title}</h1>\r\n      <h2>Author: {props.author}</h2>\r\n      <h3>Year: {props.releaseYear}</h3>\r\n      <Button color=\"#c82333\" clickAction={() => props.deleteBook(props.title)}>\r\n        delete\r\n      </Button>\r\n    </StyledTile>\r\n  );\r\n};\r\n\r\nexport default Tile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport * as actions from \"../store/actions/index\";\r\nimport InputsPanel from \"../components/InputsPanel\";\r\nimport Tile from \"../components/Tile\";\r\n\r\nconst StyledLibrary = styled.div`\r\n  padding: 1rem;\r\n  height: 100vh;\r\n  background-color: #eee;\r\n  overflow-y: hidden;\r\n`;\r\nconst StyledGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\r\n  \r\n  grid-gap: 1rem;\r\n  height: 73vh;\r\n  overflow: scroll;\r\n  overflow-x: hidden;\r\n  @media screen and (max-width:320px){\r\n    height: 65vh;\r\n  }\r\n`;\r\n\r\nconst Library = (props) => {\r\n  const deleteBookHandler = (title) => {\r\n    props.onDeleteBook(title, props.bookLib);\r\n  };\r\n\r\n  const books = props.bookLib.map((book) => {\r\n    if (book.title.startsWith(props.filteredWord)) {\r\n      return (\r\n        <Tile\r\n          key={book.title}\r\n          title={book.title}\r\n          author={book.author}\r\n          releaseYear={book.releaseYear}\r\n          deleteBook={deleteBookHandler}\r\n        />\r\n      );\r\n    }\r\n  });\r\n  return (\r\n    <StyledLibrary>\r\n      <StyledGrid>{books}</StyledGrid>\r\n      <InputsPanel addBook={props.onAddBook} books={props.bookLib} />\r\n    </StyledLibrary>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    bookLib: state.books,\r\n    filteredWord: state.filteredWord,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddBook: (title, author, releaseYear) => {\r\n      dispatch(actions.addBook(title, author, releaseYear));\r\n    },\r\n    onDeleteBook: (title, bookLib) => {\r\n      dispatch(actions.deleteBook(title, bookLib));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Library);\r\n","import Library from \"./containers/Library\";\nfunction App() {\n  return <Library />;\n}\n\nexport default App;\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  books: [\r\n    {\r\n      title: \"Eloquent JavaScript, Second Edition\",\r\n      author: \"Marijn Haverbeke\",\r\n      releaseYear: \"2014\",\r\n    },\r\n    {\r\n      title: \"Learning JavaScript Design Patterns\",\r\n      author: \"Addy Osmani\",\r\n      releaseYear: \"2012\",\r\n    },\r\n    {\r\n      title: \"Speaking JavaScript\",\r\n      author: \"Axel Rauschmayer\",\r\n      releaseYear: \"2014\",\r\n    },\r\n    {\r\n      title: \"Programming JavaScript Applications\",\r\n      author: \"Eric Elliott\",\r\n      releaseYear: \"2014\",\r\n    },\r\n    {\r\n      title: \"Understanding ECMAScript 6\",\r\n      author: \"Nicholas C. Zakas\",\r\n      releaseYear: \"2016\",\r\n    },\r\n    {\r\n      title: \"You Don't Know JS\",\r\n      author: \"Kyle Simpson\",\r\n      releaseYear: \"2015\",\r\n    },\r\n    {\r\n      title: \"Git Pocket Guide\",\r\n      author: \"Richard E. Silverman\",\r\n      releaseYear: \"2013\",\r\n    },\r\n    {\r\n      title: \"Designing Evolvable Web APIs with ASP.NET\",\r\n      author: \"Glenn Block, et al.\",\r\n      releaseYear: \"2014\",\r\n    },\r\n  ],\r\n  filteredWord: \"\",\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_BOOK: {\r\n      return {\r\n        ...state,\r\n        books: [...state.books, action.book],\r\n      };\r\n    }\r\n    case actionTypes.DELETE_BOOK: {\r\n      return {\r\n        ...state,\r\n        books: action.library,\r\n      };\r\n    }\r\n    case actionTypes.FILTER_BOOKS: {\r\n      return {\r\n        ...state,\r\n        filteredWord: action.word,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducer from \"./store/reducer/reducer\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}